<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Notifikasi extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Notifikasi_model');
    } 

    /*
     * Listing of notifikasi
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('notifikasi/index?');
        $config['total_rows'] = $this->Notifikasi_model->get_all_notifikasi_count();
        $this->pagination->initialize($config);

        $data['notifikasi'] = $this->Notifikasi_model->get_all_notifikasi($params);
        
        $data['_view'] = 'notifikasi/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new notifikasi
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'notif_object' => $this->input->post('notif_object'),
				'notif_subject' => $this->input->post('notif_subject'),
				'notif_maker_id' => $this->input->post('notif_maker_id'),
				'notif_date' => $this->input->post('notif_date'),
				'notif_fill' => $this->input->post('notif_fill'),
            );
            
            $notifikasi_id = $this->Notifikasi_model->add_notifikasi($params);
            redirect('notifikasi/index');
        }
        else
        {
			$this->load->model('Role_model');
			$data['all_roles'] = $this->Role_model->get_all_roles();
            
            $data['_view'] = 'notifikasi/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a notifikasi
     */
    function edit($notif_id)
    {   
        // check if the notifikasi exists before trying to edit it
        $data['notifikasi'] = $this->Notifikasi_model->get_notifikasi($notif_id);
        
        if(isset($data['notifikasi']['notif_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'notif_object' => $this->input->post('notif_object'),
					'notif_subject' => $this->input->post('notif_subject'),
					'notif_maker_id' => $this->input->post('notif_maker_id'),
					'notif_date' => $this->input->post('notif_date'),
					'notif_fill' => $this->input->post('notif_fill'),
                );

                $this->Notifikasi_model->update_notifikasi($notif_id,$params);            
                redirect('notifikasi/index');
            }
            else
            {
				$this->load->model('Role_model');
				$data['all_roles'] = $this->Role_model->get_all_roles();

                $data['_view'] = 'notifikasi/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The notifikasi you are trying to edit does not exist.');
    } 

    /*
     * Deleting notifikasi
     */
    function remove($notif_id)
    {
        $notifikasi = $this->Notifikasi_model->get_notifikasi($notif_id);

        // check if the notifikasi exists before trying to delete it
        if(isset($notifikasi['notif_id']))
        {
            $this->Notifikasi_model->delete_notifikasi($notif_id);
            redirect('notifikasi/index');
        }
        else
            show_error('The notifikasi you are trying to delete does not exist.');
    }
    
}
